/* eslint-disable */
/*
 * Automatically generated by 'ng g ng-alain:sta'
 * @see https://ng-alain.com/cli/sta
 *
 * Inspired by: https://github.com/acacode/swagger-typescript-api
 */

import {Injectable} from '@angular/core';
import {Observable} from 'rxjs';
import type {
  BaseResponseListPermission,
  BaseResponseListRole,
  BaseResponseString,
  Role,
  RolePermissionDto
} from '../models';
import {STABaseService, STAHttpOptions} from '../_base.service';
import type {RoleDelete1Request, RoleListPermissionRequest} from './dtos';

@Injectable({providedIn: 'root'})
export class RoleService extends STABaseService {
  /**
   * 修改
   *
   * @request POST:/role/update
   */
  update1(req: Role, options?: STAHttpOptions): Observable<BaseResponseString> {
    return this.request('POST', `/role/update`, {
      body: req,
      ...options
    });
  }

  /**
   * 添加
   *
   * @request POST:/role/save
   */
  save1(req: Role, options?: STAHttpOptions): Observable<BaseResponseString> {
    return this.request('POST', `/role/save`, {
      body: req,
      ...options
    });
  }

  /**
   * 删除
   *
   * @request POST:/role/delete
   */
  delete1(req: RoleDelete1Request, options?: STAHttpOptions): Observable<BaseResponseString> {
    return this.request('POST', `/role/delete`, {
      params: req,
      ...options
    });
  }

  /**
   * 给角色分配权限
   *
   * @request POST:/role/allocPermission
   */
  allocPermission(req: RolePermissionDto, options?: STAHttpOptions): Observable<BaseResponseString> {
    return this.request('POST', `/role/allocPermission`, {
      body: req,
      ...options
    });
  }

  /**
   * 获取角色列表
   *
   * @request GET:/role/list
   */
  list2(options?: STAHttpOptions): Observable<BaseResponseListRole> {
    return this.request('GET', `/role/list`, {
      ...options
    });
  }

  /**
   * 获取角色相关权限
   *
   * @request GET:/role/listPermission
   */
  listPermission(req: RoleListPermissionRequest, options?: STAHttpOptions): Observable<BaseResponseListPermission> {
    return this.request('GET', `/role/listPermission`, {
      params: req,
      ...options
    });
  }
}
